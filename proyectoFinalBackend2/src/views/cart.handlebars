<h1>Carrito de Compras</h1>

{{#if products.length}}
<div class="cart-products">
    {{#each products}}
    <div class="cart-product">
        <h3>{{this.product.title}}</h3>
        <p>Precio: ${{this.product.price}}</p>
        <p>Cantidad:
            <input type="number" value="{{this.quantity}}" min="1"
                onchange="updateQuantity('{{this.product._id}}', this.value)">
        </p>
        <button onclick="removeFromCart('{{this.product._id}}')">Eliminar</button>
    </div>
    {{/each}}
</div>
<p>Total: $<span id="cartTotal">{{cartTotal}}</span></p>
<button onclick="clearCart()">Vaciar carrito</button>
<button onclick="finalizePurchase()">Finalizar compra</button>
{{else}}
<p>El carrito está vacío</p>
{{/if}}

<input type="hidden" id="cartId" value="{{cartId}}">

<script>
    const cartId = document.getElementById('cartId').value;

    console.log('Cart ID:', cartId);

    function removeFromCart(productId) {
        fetch(`/api/carts/${cartId}/products/${productId}`, {
            method: 'DELETE',
        })
            .then(response => response.json())
            .then(data => {
                console.log('Producto eliminado del carrito:', data);
                location.reload();
            })
            .catch((error) => {
                console.error('Error:', error);
                alert('Error al eliminar el producto del carrito');
            });
    }

    function updateQuantity(productId, newQuantity) {
        fetch(`/api/carts/${cartId}/products/${productId}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ quantity: parseInt(newQuantity) }),
        })
            .then(response => response.json())
            .then(data => {
                console.log('Cantidad actualizada:', data);
                location.reload();
            })
            .catch((error) => {
                console.error('Error:', error);
                alert('Error al actualizar la cantidad');
            });
    }

    function clearCart() {
        fetch(`/api/carts/${cartId}`, {
            method: 'DELETE',
        })
            .then(response => response.json())
            .then(data => {
                console.log('Carrito vaciado:', data);
                location.reload();
            })
            .catch((error) => {
                console.error('Error:', error);
                alert('Error al vaciar el carrito');
            });
    }

    function finalizePurchase() {
        fetch(`/api/carts/${cartId}/purchase`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
        })
        .then(response => response.json())
        .then(data => {
            if (data.status === 'success') {
                alert(`Compra realizada con éxito. Ticket: ${data.ticket.code}`);
                if (data.failedProducts && data.failedProducts.length > 0) {
                    alert(`Algunos productos no pudieron ser comprados debido a falta de stock: ${data.failedProducts.join(', ')}`);
                }
                location.reload();
            } else {
                alert(`Error: ${data.message}`);
            }
        })
        .catch((error) => {
            console.error('Error:', error);
            alert('Error al finalizar la compra');
        });
    }
</script>
